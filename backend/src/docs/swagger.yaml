openapi: 3.0.0
info:
    title: House Sale API Documentation
    version: 1.0.0
servers:
    -   url: https://housesale.tldev.id.vn/v1/api
    -   url: https://house-sale-be.onrender.com/v1/api
    -   url: http://localhost:3000/v1/api
tags:
    -   name: Feature
    -   name: Category
    -   name: Location
    -   name: Property
    -   name: Contact
    -   name: Service
    -   name: Conversion Rate
    -   name: Maintenance Mode
    -   name: User
    -   name: Favorite Property
    -   name: Seller - Manage Property
    -   name: Seller - Manage Transaction
    -   name: Seller - Report
    -   name: Admin - Manage Category
    -   name: Admin - Manage User
    -   name: Admin - Manage Property
    -   name: Admin - Manage Transaction
    -   name: Admin - Manage Conversion Rate
    -   name: Admin - Manage Service
    -   name: Admin - Report
    -   name: Admin - Manage Maintenance Mode
paths:
    /maintenance-mode:
        get:
            tags:
                - Maintenance Mode
            summary: Get maintenance mode (NEW 26/03)
            description: Get maintenance mode
            operationId: getMaintenanceMode
            responses:
                '200':
                    description: Get maintenance mode successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get maintenance mode successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            isMaintenance:
                                                type: boolean
                                                example: false
                                            description:
                                                type: string
                                                example: Maintenance mode is off!
                                            updatedAt:
                                                type: string
                                                example: 2024-03-25T08:41:21.000Z
                '400':
                    description: Failed to get maintenance mode!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get maintenance mode!
                '404':
                    description: Maintenance mode not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Maintenance mode not found!
    /features:
        get:
            tags:
                - Feature
            summary: Get all features (UPDATED 28/02)
            description: Get all features
            operationId: getAllFeatures
            responses:
                '200':
                    description: Get list features successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list features successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                featureId:
                                                    type: number
                                                    example: 1
                                                name:
                                                    type: string
                                                    example: Sale
                '400':
                    description: Failed to get list features!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list features!
    /categories:
        get:
            tags:
                - Category
            summary: Get all categories (UPDATED 28/02)
            description: Get all categories
            operationId: getAllCategories
            responses:
                '200':
                    description: Get list categories successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list categories successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                categoryId:
                                                    type: number
                                                    example: 1
                                                name:
                                                    type: string
                                                    example: Apartment
                '400':
                    description: Failed to get list categories!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list categories!
    /properties:
        get:
            tags:
                - Property
            summary: Get all properties (UPDATED 06/03)
            description: Get list properties with status "Available" by queries (default data is sorted by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllProperties
            parameters:
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: List Id of features, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2'
                -   name: categoryId
                    in: query
                    description: List Id of categories, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2,3,4,5'
                -   name: provinceCode
                    in: query
                    description: The code of province
                    required: false
                    schema:
                        type: string
                        example: 48
                -   name: districtCode
                    in: query
                    description: The code of district
                    required: false
                    schema:
                        type: string
                        example: 493
                -   name: wardCode
                    in: query
                    description: The code of ward
                    required: false
                    schema:
                        type: string
                        example: 20275
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','price']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 2
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 12
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get list properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                -   Invalid options provided!
                                                -   Both orderBy and sortBy must be provided together!
                                                -   Failed to get list properties!
                                                -   Invalid Feature!
                                                -   Invalid Category!
                                                -   Invalid Province!
                                                -   Invalid District!
                                                -   Invalid Ward!
    /properties/count-available-property:
        get:
            tags:
                - Property
            summary: Count available properties by feature and category (NEW 21/03)
            description: Count available properties by feature and category
            operationId: countAvailableProperty
            responses:
                '200':
                    description: Get all available property count by feature and category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all available property count by feature and category successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertyByFeatureAndCategory'
                                        example:
                                            -   featureId: 1
                                                name: Sale
                                                totalCount: 7
                                                categories:
                                                    -   categoryId: 1
                                                        name: Apartment
                                                        count: 1
                                                    -   categoryId: 5
                                                        name: Hotel
                                                        count: 0
                                                    -   categoryId: 2
                                                        name: House
                                                        count: 6
                                                    -   categoryId: 4
                                                        name: Serviced Apartment
                                                        count: 0
                                                    -   categoryId: 3
                                                        name: Villa
                                                        count: 0
                                            -   featureId: 2
                                                name: Rent
                                                totalCount: 12
                                                categories:
                                                    -   categoryId: 1
                                                        name: Apartment
                                                        count: 0
                                                    -   categoryId: 5
                                                        name: Hotel
                                                        count: 0
                                                    -   categoryId: 2
                                                        name: House
                                                        count: 12
                                                    -   categoryId: 4
                                                        name: Serviced Apartment
                                                        count: 0
                                                    -   categoryId: 3
                                                        name: Villa
                                                        count: 0
                '400':
                    description: Failed to get all property count by feature and category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all property count by feature and category!
    /properties/max-price:
        get:
            tags:
                - Property
            summary: Get max price of properties (NEW 02/4)
            description: Get max price of properties
            operationId: getMaxPropertyPrice
            responses:
                '200':
                    description: Get max price of all properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get max price of all properties successfully!
                                    metaData:
                                        type: number
                                        example: 5350473
                '400':
                    description: Failed to get max price of all properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get max price of all properties!
    /properties/{propertyId}:
        get:
            tags:
            -   Property
            summary: Get property by Id (UPDATED 22/03)
            description: Returns a property has status "Available" by propertyId
            operationId: getProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of propertyId to return
                required: true
                schema:
                    type: number
                    example: 1
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
    /location/provinces:
        get:
            tags:
                - Location
            summary: Get all provinces (UPDATED 28/02)
            description: Get all provinces
            operationId: getAllProvinces
            responses:
                '200':
                    description: Get list provinces successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list provinces successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Province'
                '400':
                    description: Failed to get list provinces!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get list provinces!
                '404':
                    description: No province found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No province found!
    /location/districts:
        get:
            tags:
            - Location
            summary: Get all district by provinceCode (UPDATED 28/02)
            description: get all district by provinceCode
            operationId: getAllDistrictsByProvinceCode
            parameters:
            -   name: provinceCode
                in: query
                description: provinceCode of province to get all district
                required: true
                schema:
                    type: string
                    example: 48
            responses:
                '200':
                    description: Get list districts successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list districts success!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/District'
                '400':
                    description: Failed to get list districts!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid province. Please try again!
                                                    -   Failed to get list districts!
                                                    -   Province code is required!
                '404':
                    description: No district found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No district found!
    /location/wards:
        get:
            tags:
            - Location
            summary: Get all wards by districtCode (UPDATED 28/02)
            description: get all wards by districtCode
            operationId: getAllWardsByDistrictCode
            parameters:
            -   name: districtCode
                in: query
                description: districtCode of ward to get all wards
                required: true
                schema:
                    type: string
                    example: 490
            responses:
                '200':
                    description: Get list wards successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get list wards successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Ward'
                '400':
                    description: Get all wards failed!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid district. Please try again!
                                                    -   Failed to get list wards!
                                                    -   District code is required!
                '404':
                    description: No ward found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: No ward found!
    /user/login-with-google:
        post:
            tags:
                - User
            summary: Login with Google (UPDATED)
            description: Login with Google account and create new user if not exists
            operationId: loginWithGoogle
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: nhattrinh.le.it@gmail.com
                                fullName:
                                    type: string
                                    example: Le Nhat Trinh
                                accessToken:
                                    type: string
                                    example: ya29.a0AfB_byCOM7ZN5OwZufgwFPU8A6AjjkTqkE3bRGy9lK8-WpxYiqWsK0w8eNxpCQByOyAx1u3zXF6jfcyQsgw_g4HCNQapLt3VY4CMsYYj9PTmeYmruWDGnXTx5pcT7v3pyLQh2j9MtxY2JjR-Fz-115EKumts9IqWxU4aCgYKARsSARASFQHGX2Mi8zlej3VgBu267rnav1JUjg0170
                            required:
                                - "email"
                                - "fullName"
                                - "accessToken"
            responses:
                '200':
                    description: Login with Google successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Login with Google successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            user:
                                                $ref: '#/components/schemas/User'
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Login with Google failed!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to login with Google!
                                                    -   Failed to create tokens!
                                                    -   Invalid client ID!
                                                    -   Invalid google access token!
    /user/register-user:
        post:
            tags:
                - User
            summary: Create new user (UPDATED)
            description: Create new user
            operationId: registerUser
            requestBody:
                description: User email and password
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserBody'
                required: true
            responses:
                '201':
                    description: Registration success for new user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Registration success for new user!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to create new user!
                '403':
                    description: DuplicateEmail
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your email already exists! Please register with another email!
    /user/register-seller:
        post:
            tags:
                - User
            summary: Create new seller (UPDATED)
            description: Create new seller, send verification email to seller's email
            operationId: registerSeller
            requestBody:
                description: Seller information
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewSeller'
                required: true
            responses:
                '201':
                    description: Registration success for new user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Registration success for new seller! Please check your email to verify your account!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Invalid Province. Invalid District. Invalid Ward. Failed to create new seller!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: This ward is not available yet. Please try again.
                '403':
                    description: DuplicateEmail
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your email already exists! Please register with another email!
    /user/login:
        post:
            tags:
                - User
            summary: Login to access system (UPDATED)
            description: Login to access system
            operationId: login
            requestBody:
                description: Login success
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserBody'
                required: true
            responses:
                '200':
                    description: Login success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Login success!
                                    metaData:
                                        type: object
                                        properties:
                                            user:
                                                $ref: '#/components/schemas/User'
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Failed to create tokens!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to create tokens!
                '401':
                    description: Incorrect email or password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                example: Incorrect email or password!
                '403':
                    description: Your account is not active! or Email not verified! (For seller)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                enum:
                                                    -  Your account is not active!
                                                    -  Your email has not been verified. Please check your email and verify it!
                '404':
                    description: Email not registered!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Email not registered!
    /user/refreshTokens:
        post:
            tags:
                - User
            summary: Refresh Tokens (UPDATED)
            description: Refresh Tokens
            operationId: refreshTokens
            requestBody:
                description: refreshToken
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              refreshToken:
                                type: string
                                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImlhdCI6MTcwNzQ0Mzc0MywiZXhwIjoxNzA4MDQ4NTQzLCJ0eXBlIjoicmVmcmVzaCJ9.xbR_ZLbKphz3161exK3HpoWPmh8GH6w3Gu0USDv8nko
                            required:
                              - "refreshToken"
                required: true
            responses:
                '201':
                    description: Refresh tokens successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Refresh tokens successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            tokens:
                                                $ref: '#/components/schemas/Tokens'
                '400':
                    description: Failed to create tokens!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to verify refreshToken!
                                                    -   Failed to remove tokens!
                                                    -   Failed to create tokens!
                '404':
                    description: Tokens or user not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   Tokens not found!
                                                    -   User not found!
    /user/verify-email/{userId}/{code}:
        get:
            tags:
                - User
            summary: Verify email (UPDATED)
            description: Verify seller email when register seller account or user upgrade to seller or user upgrade to seller. System send a verify link to seller's email, seller must verify email to access system
            operationId: verifyEmail
            parameters:
                -   name: userId
                    in: path
                    description: ID of user
                    required: true
                    schema:
                        type: number
                        example: 44
                -   name: code
                    in: path
                    description: code to verify email
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: e916faf0-3123-4fcc-8ec3-9a2c2bb4b38c44
            responses:
                '302':
                    description: Alert notification about result of verify email and redirect to home page (https://house-sale-three.vercel.app/home)
    /user/logout:
        post:
            tags:
                - User
            summary: Logout (UPDATED)
            description: Logout
            operationId: logout
            requestBody:
                description: Refresh Token
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                              refreshToken:
                                type: string
                                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsImlhdCI6MTcwNzQ0Mzc0MywiZXhwIjoxNzA4MDQ4NTQzLCJ0eXBlIjoicmVmcmVzaCJ9.xbR_ZLbKphz3161exK3HpoWPmh8GH6w3Gu0USDv8nko
                            required:
                              - "refreshToken"
                required: true
            responses:
                '200':
                    description: Logout success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Logout success!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to logout!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to logout!
                                                    -   Failed to get tokens!
                                                    -   Failed to remove tokens!
                '401':
                    description: Unauthorized or Invalid accessToken!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -   Invalid accessToken!
                '404':
                    description: RefreshToken not valid!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: RefreshToken not valid!
            security:
                - bearerAuth: []
    /user/change-password:
        post:
            tags:
                - User
            summary: Change user password (UPDATED)
            description: Change user password
            operationId: changePassword
            requestBody:
                description: current password and new password
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                currentPassword:
                                    type: string
                                    example: T12345678
                                newPassword:
                                    type: string
                                    example: T123456789
                            required:
                              - "currentPassword"
                              - "newPassword"
                required: true
            responses:
                '200':
                    description: 'Your password has been changed successfully!'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your password has been changed successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to change your password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to change your password!
                                                enum:
                                                    -   Failed to change your password!
                                                    -   New Password cannot be same as your current password. Please choose a different password!

                '401':
                    description: Unauthorized or Incorrect current password!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Incorrect current password!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /user/profile:
        get:
            tags:
            -   User
            summary: Get user profile  (UPDATED)
            description: Returns a user profile
            operationId: getProfile
            responses:
                '200':
                    description: Get your profile successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get your profile successfully!
                                    metaData:
                                        $ref: '#/components/schemas/User'
                '400':
                    description: User profile not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   User profile not found!
                                                    -   userId is required!
                                                    -   Failed to get user!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
        patch:
            tags:
            -   User
            summary: Update user profile (UPDATED)
            description: Update a user profile
            operationId: updateProfile
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateUserProfile'
            responses:
                '200':
                    description: Your profile had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Your profile had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Nothing to update!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Nothing to update!
                                                    -   userId is required!
                                                    -   Failed to update your profile!
                                                    -   New phone number cannot be same as your current phone number. Please choose a different phone number!
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
              - bearerAuth: []
    /user/update-avatar:
        post:
            tags:
                - User
            summary: Update user avatar (UPDATED)
            description: Update user avatar
            operationId: updateAvatar
            requestBody:
                description: new avatar url
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                imageUrl:
                                    type: string
                                    example: https://res.cloudinary.com/housesale/image/upload/v1706774835/avatar/32/avatar.png
                            required:
                              - "imageUrl"
                required: true
            responses:
                '200':
                    description: Your avatar had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your avatar had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update your avatar!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update your avatar!
                                                    -   userId is required!
                                                    -   User not found!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /user/upgrade-seller:
        post:
            tags:
                - User
            summary: Upgrade user to seller (UPDATED)
            description: Upgrade user to seller, fulfill seller information and send verification email to seller's email
            operationId: upgradeSeller
            requestBody:
                description: Seller information
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                fullName:
                                    type: string
                                    example: John Doe
                                phone:
                                    type: string
                                    example: 0888888776
                                provinceCode:
                                    type: string
                                    example: 48
                                districtCode:
                                    type: string
                                    example: 493
                                wardCode:
                                    type: string
                                    example: 20275
                                street:
                                    type: string
                                    example: Bach Dang
                                address:
                                    type: string
                                    example: 107
                            required:
                                - "fullName"
                                - "phone"
                                - "provinceCode"
                                - "districtCode"
                                - "wardCode"
                                - "street"
                required: true
            responses:
                '200':
                    description: Your upgrade request has been sent! Please check your email to confirm!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your upgrade request has been sent! Please check your email to confirm!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Invalid or missing recipient email address!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Upgrade to seller failed!
                                                enum:
                                                    -   userId is required!
                                                    -   Failed to generate email verification code!
                                                    -   Invalid or missing recipient email address!
                                                    -   Failed to update user!
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!

                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '424':
                    description: Failed to send email!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /contact:
        post:
            tags:
              - Contact
            summary: Create new contact and send to seller (UPDATED 04/03)
            description: Create new contact about property with status "Available" and send to seller
            operationId: createNewContact
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/NewContactBody'
                        required: true
            responses:
                '201':
                    description: New contact had been created successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Your contact had been sent successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new contact!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to create new contact!
                                                    -   Invalid or missing recipient email address!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
                '424':
                    description: Failed to send email!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email!
    /favorites-list:
        get:
            tags:
              - "Favorite Property"
            summary: Get all properties in user's favorites list (UPDATED 18/03)
            description: Get all properties in user's favorites list
            operationId: getFavoritesProperty
            responses:
                '200':
                    description: Get your favorites list successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get your favorites list successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            count:
                                                type: number
                                                example: 1
                                            favoritesList:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get favorites list!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get favorites list!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        post:
            tags:
                - "Favorite Property"
            summary: Update user's favorites list (UPDATED 04/03)
            description: Add property (only property has status "Available") to favorites list or remove property (all status) from favorites list if it already exists.
            operationId: updateFavoritesProperty
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            propertyId:
                                type: number
                                example: 15
                        required:
                          - "propertyId"
            responses:
                '200':
                    description: Your favorites list had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your favorites list had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to add to favorites list!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   This property is not available!
                                                    -   Failed to add to favorites list!
                                                    -   Failed to update favorite property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found! or Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   User not found!
                                                    -   Property not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /seller/properties:
        get:
            tags:
                - Seller - Manage Property
            summary: Get all properties (UPDATED 06/03)
            description: Return list property of seller has status "Available", "Unavailable" or "Disabled" (default data is sorted by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllPropertiesBySeller
            parameters:
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: List Id of features, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2'
                -   name: categoryId
                    in: query
                    description: List Id of categories, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2,3,4,5'
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','price']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
                        default: 'desc'
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyOfSeller'
                '400':
                    description: Failed to get list properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                -   Invalid options provided!
                                                -   Both orderBy and sortBy must be provided together!
                                                -   Failed to get list properties!
                                                -   Invalid Feature!
                                                -   Invalid Category!
                                                -   Invalid Province!
                                                -   Invalid District!
                                                -   Invalid Ward!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
              - bearerAuth: []
        post:
            tags:
                - Seller - Manage Property
            summary: Create new property by seller (UPDATED 18/03)
            description: Create new property by seller
            operationId: createNewProperty
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                propertyData:
                                    $ref: '#/components/schemas/NewPropertyBody'
                                option:
                                    type: object
                                    properties:
                                        serviceId:
                                            type: number
                                            example: 1
                                            description: The serviceId of the create property service
            responses:
                '201':
                    description: New property had been created successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: New property had been created successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Not enough money!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Your balance is not enough to create new property. Please refill your balance!
                                                    -   Failed to create new location!
                                                    -   Invalid Province!
                                                    -   Invalid District!
                                                    -   Invalid Ward!
                                                    -   Failed to create new property!
                                                    -   Invalid amount!
                                                    -   Failed to init expense transaction!
                                                    -   Failed to update user balance!
                                                    -   Failed to save image!
                                                    -   Failed to create rent service transaction!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Service ID is required!
                                                    -   Failed to get service by serviceId!
                                                    -   Failed to get coordinates!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found! Service not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   User not found!
                                                    -   Service not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
              - bearerAuth: []
        delete:
            tags:
            -   Seller - Manage Property
            summary: Delete list property by propertyId (UPDATED 12-03)
            description: Delete list property by propertyId
            operationId: deletePropertyBySeller
            parameters:
                -   name: propertyId
                    in: query
                    description: List Id of property, comma-separated
                    required: true
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: 69,70
            responses:
                '200':
                    description: Delete list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete list properties successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to delete property!
                                                    -   Failed to delete list properties!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
              - bearerAuth: []
    /seller/properties/{propertyId}:
        get:
            tags:
            -   Seller - Manage Property
            summary: Get property of seller by Id (UPDATED 22/03)
            description: Return a property of seller by Id has status Available, Unavailable or Disabled
            operationId: getProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of propertyId to return
                required: true
                schema:
                    type: number
                    example: 1
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyOfSeller'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
              - bearerAuth: []
        patch:
            tags:
            -   Seller - Manage Property
            summary: Update property by Id (UPDATED 12/03)
            description: Update a property (Only property status Available can be updated by seller!)
            operationId: updateProperty
            parameters:
            -   name: propertyId
                in: path
                description: ID of property to update
                required: true
                schema:
                    type: number
                    example: 31
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdatePropertyBody'
            responses:
                '200':
                    description: Update property success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        enum:
                                            -   Your property had been updated successfully!
                                            -   No changes made!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to update property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
              - bearerAuth: []
    /seller/properties/{propertyId}/status:
        patch:
            tags:
            -   Seller - Manage Property
            summary: Update property status by Id (UPDATED 12/03)
            description: Update property status (Only property status Available or Unavailable can be updated status by seller!)
            operationId: updatePropertyStatusBySeller
            parameters:
            -   name: propertyId
                in: path
                description: ID of property to delete
                required: true
                schema:
                    type: number
                    example: 31
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                                enum:
                                    -   Available
                                    -   Unavailable
                                example: Unavailable
                            serviceId:
                                type: number
                                example: 1
                        required:
                          - "status"
            responses:
                '200':
                    description: Your property status had been updated successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Your property status had been updated successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update property status!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update property status!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   You can not update status of disabled property!
                                                    -   The property status is the same!
                                                    -   You need to choose a service to update property status because you do not have available saved time!
                                                    -   Service ID is required!
                                                    -   Failed to get service by serviceId!
                                                    -   Service not found!
                                                    -   Your balance is not enough to use this service. Please refill your balance!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /seller/report/count-properties-by-feature:
        get:
            tags:
            -   Seller - Report
            summary: Count properties by feature (NEW 19/03)
            description: Return list count properties by feature
            operationId: countPropertiesByFeatureOfSeller
            responses:
                '200':
                    description: Counting properties by feature successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties by feature successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertiesByFeature'
                                        example:
                                            -   featureId: 1
                                                name: Sale
                                                count: 0
                                            -   featureId: 2
                                                name: Rent
                                                count: 8
                '400':
                    description: Failed to get count properties by feature!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get count properties by feature!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
    /seller/report/count-properties-by-category:
        get:
            tags:
            -   Seller - Report
            summary: Count properties by category (NEW 19/03)
            description: Return list count properties by category
            operationId: countPropertiesByCategoryOfSeller
            responses:
                '200':
                    description: Counting properties by category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties by category successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertiesByCategory'
                                        example:
                                            -   categoryId: 1
                                                name: Apartment
                                                count: 1
                                            -   categoryId: 2
                                                name: House
                                                count: 8
                                            -   categoryId: 3
                                                name: Villa
                                                count: 0
                                            -   categoryId: 4
                                                name: Serviced Apartment
                                                count: 0
                                            -   categoryId: 5
                                                name: Hotel
                                                count: 0
                '400':
                    description: Failed to get count properties by category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get count properties by category!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
              - bearerAuth: []
    /seller/report/count-properties-created-by-date:
        get:
            tags:
            -   Seller - Report
            summary: Count properties created by date (NEW 19/03)
            description: Return list count properties created by date
            operationId: countPropertiesCreatedByDateOfSeller
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count properties created by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-01-23
                -   name: toDateRange
                    in: query
                    description: The end date to count properties created by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-02-23
            responses:
                '200':
                    description: Counting properties created by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties created by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCount:
                                                type: number
                                                example: 2
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountPropertiesCreatedByDate'
                                                example:
                                                    -   dateReport: 2024-01-23
                                                        count: 1
                                                    -   dateReport: 2024-01-24
                                                        count: 0
                                                    -   dateReport: 2024-01-25
                                                        count: 0
                                                    -   dateReport: 2024-01-26
                                                        count: 0
                                                    -   dateReport: 2024-01-27
                                                        count: 0
                                                    -   dateReport: 2024-01-28
                                                        count: 0
                                                    -   dateReport: 2024-01-29
                                                        count: 0
                                                    -   dateReport: 2024-01-30
                                                        count: 0
                                                    -   dateReport: 2024-01-31
                                                        count: 0
                                                    -   dateReport: 2024-02-01
                                                        count: 0
                                                    -   dateReport: 2024-02-02
                                                        count: 0
                                                    -   dateReport: 2024-02-03
                                                        count: 0
                                                    -   dateReport: 2024-02-04
                                                        count: 0
                                                    -   dateReport: 2024-02-05
                                                        count: 0
                                                    -   dateReport: 2024-02-06
                                                        count: 0
                                                    -   dateReport: 2024-02-07
                                                        count: 0
                                                    -   dateReport: 2024-02-08
                                                        count: 0
                                                    -   dateReport: 2024-02-09
                                                        count: 0
                                                    -   dateReport: 2024-02-10
                                                        count: 0
                                                    -   dateReport: 2024-02-11
                                                        count: 0
                                                    -   dateReport: 2024-02-12
                                                        count: 0
                                                    -   dateReport: 2024-02-13
                                                        count: 0
                                                    -   dateReport: 2024-02-14
                                                        count: 0
                                                    -   dateReport: 2024-02-15
                                                        count: 0
                                                    -   dateReport: 2024-02-16
                                                        count: 0
                                                    -   dateReport: 2024-02-17
                                                        count: 0
                                                    -   dateReport: 2024-02-18
                                                        count: 0
                                                    -   dateReport: 2024-02-19
                                                        count: 0
                                                    -   dateReport: 2024-02-20
                                                        count: 0
                                                    -   dateReport: 2024-02-21
                                                        count: 0
                                                    -   dateReport: 2024-02-22
                                                        count: 0
                                                    -   dateReport: 2024-02-23
                                                        count: 1
                '400':
                    description: Failed to count properties created by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to count properties created by date!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Failed to get properties creation data by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/count-contacts-by-date:
        get:
            tags:
            -   Seller - Report
            summary: Count contacts by date (NEW 21/03)
            description: Return list count contacts of seller by date
            operationId: countContactsByDateOfSeller
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count contacts by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-01-23
                -   name: toDateRange
                    in: query
                    description: The end date to count contacts by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-02-23
            responses:
                '200':
                    description: Counting contacts by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting contacts by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCount:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountContactsByDate'
                                                example:
                                                    -   dateReport: 2024-01-23
                                                        count: 0
                                                    -   dateReport: 2024-01-24
                                                        count: 0
                                                    -   dateReport: 2024-01-25
                                                        count: 0
                                                    -   dateReport: 2024-01-26
                                                        count: 0
                                                    -   dateReport: 2024-01-27
                                                        count: 0
                                                    -   dateReport: 2024-01-28
                                                        count: 0
                                                    -   dateReport: 2024-01-29
                                                        count: 0
                                                    -   dateReport: 2024-01-30
                                                        count: 0
                                                    -   dateReport: 2024-01-31
                                                        count: 0
                                                    -   dateReport: 2024-02-01
                                                        count: 0
                                                    -   dateReport: 2024-02-02
                                                        count: 0
                                                    -   dateReport: 2024-02-03
                                                        count: 0
                                                    -   dateReport: 2024-02-04
                                                        count: 1
                                                    -   dateReport: 2024-02-05
                                                        count: 5
                                                    -   dateReport: 2024-02-06
                                                        count: 0
                                                    -   dateReport: 2024-02-07
                                                        count: 0
                                                    -   dateReport: 2024-02-08
                                                        count: 0
                                                    -   dateReport: 2024-02-09
                                                        count: 0
                                                    -   dateReport: 2024-02-10
                                                        count: 0
                                                    -   dateReport: 2024-02-11
                                                        count: 0
                                                    -   dateReport: 2024-02-12
                                                        count: 0
                                                    -   dateReport: 2024-02-13
                                                        count: 0
                                                    -   dateReport: 2024-02-14
                                                        count: 0
                                                    -   dateReport: 2024-02-15
                                                        count: 0
                                                    -   dateReport: 2024-02-16
                                                        count: 0
                                                    -   dateReport: 2024-02-17
                                                        count: 0
                                                    -   dateReport: 2024-02-18
                                                        count: 0
                                                    -   dateReport: 2024-02-19
                                                        count: 0
                                                    -   dateReport: 2024-02-20
                                                        count: 1
                                                    -   dateReport: 2024-02-21
                                                        count: 0
                                                    -   dateReport: 2024-02-22
                                                        count: 0
                                                    -   dateReport: 2024-02-23
                                                        count: 0
                '400':
                    description: Failed to count contacts by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Failed to get contacts count by date range!
                                                    -   Failed to count contacts by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/total-amount-deposited:
        get:
            tags:
                - Seller - Report
            summary: Get total amount deposited by seller (NEW 27/03)
            description: Get total amount deposited by seller
            operationId: getTotalAmountDepositedOfSeller
            responses:
                '200':
                    description: Get total amount deposited successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total amount deposited successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalAmountInDollars:
                                                type: number
                                                format: decimal(10,2)
                                                example: 866.35
                                            totalAmountInCredits:
                                                type: number
                                                format: decimal(10,2)
                                                example: 815
                '400':
                    description: Failed to get total amount deposited!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get total amount deposited!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Failed to get total amount deposited in dollars!
                                                    -   Failed to get total amount deposited in credits!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/total-amount-deposited-by-date:
        get:
            tags:
                - Seller - Report
            summary: Get total amount deposited by date (NEW 27/03)
            description: Return list total amount deposited in dollars and credits by date
            operationId: getTotalAmountDepositedByDateOfSeller
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count amount deposited by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-21
                -   name: toDateRange
                    in: query
                    description: The end date to count amount deposited by date
                    required: true
                    schema:
                        type: string
                        format: date
                    example: 2024-03-26
            responses:
                '200':
                    description: Get total amount deposited by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total amount deposited by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalAmountInDollars:
                                                type: number
                                                example: 866.35
                                            totalAmountInCredits:
                                                type: number
                                                example: 815
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountAmountDepositedByDate'
                                                example:
                                                    -   dateReport: 2024-03-21
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-22
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-23
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-24
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-25
                                                        amountInCredits: "600.00"
                                                        amountInDollars: "600.00"
                                                    -   dateReport: 2024-03-26
                                                        amountInCredits: "215.00"
                                                        amountInDollars: "266.35"
                '400':
                    description: Failed to get total amount deposited by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to get total amount deposited by date!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Failed to get deposited data by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/total-credits-used:
        get:
            tags:
              - Seller - Report
            summary: Get total credits used by seller (NEW 27/03)
            description: Get total credits used by seller
            operationId: getTotalCreditsUsedBySeller
            responses:
                '200':
                    description: Get total credits used successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total credits used successfully!
                                    metaData:
                                        type: number
                                        example: 1150
                '400':
                    description: Failed to get total credits used!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get total credits used!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/total-credits-used-by-date:
        get:
            tags:
              - Seller - Report
            summary: Get total credits used by date (NEW 27/03)
            description: Return list total credits used by date
            operationId: getTotalCreditsUsedByDateOfSeller
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count credits used by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-12
                -   name: toDateRange
                    in: query
                    description: The end date to count credits used by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-30
            responses:
                '200':
                    description: Get total credits used by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total credits used by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCreditsUsed:
                                                type: number
                                                example: 1150
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountCreditsUsedByDate'
                                                example:
                                                    -   dateReport: 2024-03-12
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-13
                                                        totalCreditsUsed: 200.00
                                                    -   dateReport: 2024-03-14
                                                        totalCreditsUsed: 890.00
                                                    -   dateReport: 2024-03-15
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-16
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-17
                                                        totalCreditsUsed: 15.00
                                                    -   dateReport: 2024-03-18
                                                        totalCreditsUsed: 30.00
                                                    -   dateReport: 2024-03-19
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-20
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-21
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-22
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-23
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-24
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-25
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-26
                                                        totalCreditsUsed: 15.00
                                                    -   dateReport: 2024-03-27
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-28
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-29
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-30
                                                        totalCreditsUsed: 0
                '400':
                    description: Failed to get total credits used by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to get total credits used by date!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Failed to get credits used data by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/report/total-contacts:
        get:
            tags:
              - Seller - Report
            summary: Get total contacts of seller (NEW 01/4)
            description: Get total contacts of seller
            operationId: getTotalContactsOfSeller
            responses:
                '200':
                    description: Get total contacts successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total contacts successfully!
                                    metaData:
                                        type: number
                                        example: 7
                '400':
                    description: Failed to get total contacts!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get total contacts by seller!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /seller/transaction/deposit:
        get:
            tags:
                - Seller - Manage Transaction
            summary: Get all seller deposit transactions (UPDATED 25/03)
            description: Get all deposit transactions of user by queries (fromDate - toDate) (default in 7 days before today and ordered by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllTransactions
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date of the range to filter transactions. (default 7 days before today)
                    required: false
                    schema:
                        type: string
                        format: date-time

                -   name: toDateRange
                    in: query
                    description: The end date of the range to filter transactions. (default is today)
                    required: false
                    schema:
                        type: string
                        format: date-time
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get all deposit transactions successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all deposit transactions successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 5
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/DepositTransaction'
                '400':
                    description: Failed to get all deposit transactions!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get all deposit transactions!
                                                    -   Invalid date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found
            security:
                - bearerAuth: []
        post:
            tags:
                - Seller - Manage Transaction
            summary: Deposit credit to seller's balance (UPDATED 26/03)
            description: Deposit credit to seller's balance
            operationId: depositSellerBalance
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            amountInDollars:
                                type: number
                                format: decimal(10,2)
                                example: 100
                            amountInCredits:
                                type: number
                                format: decimal(10,2)
                                example: 200
                            exchangeRate:
                                type: number
                                format: decimal(10,2)
                                example: 2
                            description:
                                type: string
                                example: Deposit $100 equivalent to 200 Credits
                        required:
                            -   "amountInDollars"
                            -   "amountInCredits"
                            -   "exchangeRate"
                            -   "description"
            responses:
                '200':
                    description: Deposit credit to user's balance successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Your balance has been added 100.00 Credit successfully! Your current balance is 200.00 Credit!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to deposit credit!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid amount!
                                                    -   Invalid exchange rate!
                                                    -   userId is required!
                                                    -   Invalid description!
                                                    -   Failed to deposit credit!
                                                    -   Failed to update user balance!
                                                    -   Failed to create deposit transaction!
                                                    -   Failed to get current exchange rate!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!, Conversion rate not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   User not found!
                                                    -   Conversion rate not found!
                '503':
                    description: Maintenance mode is on!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 503
                                            message:
                                                type: string
                                                example: This service is under maintenance mode. Please come back later!
            security:
                - bearerAuth: []
    /seller/transaction/rent-service:
        get:
            tags:
                - Seller - Manage Transaction
            summary: Get all seller's rent service transactions (UPDATED 26/03)
            description: Get all rent service transactions of user by queries (fromDate - toDate) (default in 7 days before today and ordered by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllRentServiceTransactions
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date of the range to filter transactions. (default 7 days before today)
                    required: false
                    schema:
                        type: string
                        format: date-time
                -   name: toDateRange
                    in: query
                    description: The end date of the range to filter transactions. (default is today)
                    required: false
                    schema:
                        type: string
                        format: date-time
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get all rent service transactions successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all rent service transactions successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 5
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/RentServiceTransaction'
                '400':
                    description: Failed to get all rent service transactions!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get all rent service transactions!
                                                    -   Invalid date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /services:
        get:
            tags:
                -   Service
            summary: Get all services (NEW 05/03)
            description: Get all services in system
            operationId: getAllServices
            responses:
                '200':
                    description: Get list services successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list services successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Service'
                '400':
                    description: Failed to get all services!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all services!
    /conversion-rate:
        get:
            tags:
                -   Conversion Rate
            summary: Get all conversion rates  (NEW 05/03)
            description: Get all conversion rates
            operationId: getAllConversionRates
            responses:
                '200':
                    description: Get list conversion rates successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list conversion rates successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ConversionRate'
                '400':
                    description: Failed to get list conversion rates!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list conversion
    /admin/manage-user:
        get:
            tags:
                - Admin - Manage User
            summary: Get all users (NEW)
            description: Get all users by queries
            operationId: getAllUsers
            parameters:
                -   name: roleId
                    in: query
                    description: The ID of role
                    required: false
                    schema:
                        type: number
                        enum:
                            - 1
                            - 2
                -   name: email
                    in: query
                    description: A email-keyword to search for users
                    required: false
                    schema:
                        type: string
                        example: nhattrinh
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                        default: 1
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                        default: 10
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','email', 'fullName']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get list users success!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:   Get list users success!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/User'
                '400':
                    description: Failed to get all users!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all users!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
        delete:
            tags:
            -   Admin - Manage User
            summary: Delete list user by Id (UPDATED 12/03)
            description: Delete list user by Id
            operationId: deleteListUsersByAdmin
            parameters:
            -   name: userId
                in: query
                description: List id of user, comma-separated
                required: true
                schema:
                    type: string
                    pattern: '^\d+(,\d+)*$'
                    example: 100,101

            responses:
                '200':
                    description: Delete list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Delete list properties successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete list users!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to delete list users!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}:
        get:
            tags:
            -   Admin - Manage User
            summary: Get user by Id (NEW)
            description: Returns a user by Id
            operationId: getUserById
            parameters:
            -   name: userId
                in: path
                description: Id of user to return
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Get user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get user successfully!
                                    metaData:
                                        $ref: '#/components/schemas/User'
                '400':
                    description: Failed to get user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get user!
                                                    -   userId is required!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        patch:
            tags:
                - Admin - Manage User
            summary: Update user by Id (NEW)
            description: Update user by Id
            operationId: updateUserById
            parameters:
                -   name: userId
                    in: path
                    description: Id of user to update
                    required: true
                    schema:
                        type: number
                        example: 83
            requestBody:
                content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateUserBodyByAdmin'
            responses:
                '200':
                    description: Update user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Update user successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Complete address information required. You must provide provinceCode, districtCode, and wardCode together!
                                                    -   Failed to update user!
                                                    -   userId is required!
                                                    -   Nothing to update!
                                                    -   New phone number cannot be same as your current phone number. Please choose a different phone number!
                                                     -   Invalid province. Please try again!
                                                    -   Invalid district. Please try again!
                                                    -   Invalid ward. Please try again!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}/active:
        patch:
            tags:
            -   Admin - Manage User
            summary: Update user active status by Id (NEW)
            description: Update user active status by Id
            operationId: updateUserActiveStatus
            parameters:
            -   name: userId
                in: path
                description: Id of user to update active status
                required: true
                schema:
                    type: number
                    example: 5
            responses:
                '200':
                    description: Update user active status successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        enum:
                                            - User has been successfully activated!
                                            - User has been successfully deactivated!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update user active status!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update user active status!
                                                    -   userId is required!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-user/{userId}/reset-password:
        post:
            tags:
            -   Admin - Manage User
            summary: Reset user password by Id (NEW)
            description: Reset user password and send email contain new password to user
            operationId: resetUserPassword
            parameters:
            -   name: userId
                in: path
                description: Id of user to reset password
                required: true
                schema:
                    type: number
                    example: 83
            responses:
                '200':
                    description: Reset user password successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Reset user password successfully! New password has been sent to user's email!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to reset user password, userId is required!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to reset user password!
                                                    -   userId is required!
                                                    -   Invalid email or newPassword!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
                '424':
                    description: Failed to send email to user!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 424
                                            message:
                                                type: string
                                                example: Failed to send email to user!
            security:
                - bearerAuth: []
    /admin/manage-property:
        get:
            tags:
                - Admin - Manage Property
            summary: Get all properties by ADMIN (UPDATED 06/03)
            description: Get all properties by queries (default data is sorted by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllPropertiesByAdmin
            parameters:
                -   name: userId
                    in: query
                    description: The ID of user who created the property
                    required: false
                    schema:
                        type: string
                        example: 2
                -   name: keyword
                    in: query
                    description: A keyword to search for properties
                    required: false
                    schema:
                        type: string
                        example: apart
                -   name: featureId
                    in: query
                    description: List Id of features, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2'
                -   name: categoryId
                    in: query
                    description: List Id of categories, comma-separated
                    required: false
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: '1,2,3,4,5'
                -   name: provinceCode
                    in: query
                    description: The code of province
                    required: false
                    schema:
                        type: string
                        example: 48
                -   name: districtCode
                    in: query
                    description: The code of district
                    required: false
                    schema:
                        type: string
                        example: 493
                -   name: wardCode
                    in: query
                    description: The code of ward
                    required: false
                    schema:
                        type: string
                        example: 20275
                -   name: priceFrom
                    in: query
                    description: The minimum price of a property
                    required: false
                    schema:
                        type: number
                -   name: priceTo
                    in: query
                    description: The maximum price of a property
                    required: false
                    schema:
                        type: number
                -   name: landAreaFrom
                    in: query
                    description: The minimum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: landAreaTo
                    in: query
                    description: The maximum land area of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseFrom
                    in: query
                    description: The minimum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: areaOfUseTo
                    in: query
                    description: The maximum area of use of a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorFrom
                    in: query
                    description: The minimum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfFloorTo
                    in: query
                    description: The maximum number of floors in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomFrom
                    in: query
                    description: The minimum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfBedRoomTo
                    in: query
                    description: The maximum number of bedrooms in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletFrom
                    in: query
                    description: The minimum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: numberOfToiletTo
                    in: query
                    description: The maximum number of toilets in a property.
                    required: false
                    schema:
                        type: number
                -   name: page
                    in: query
                    description: The page number for pagination.
                    required: false
                    schema:
                        type: number
                -   name: limit
                    in: query
                    description: The maximum number of items per page.
                    required: false
                    schema:
                        type: number
                -   name: orderBy
                    in: query
                    description: The field to order results by.
                    required: false
                    schema:
                        type: string
                        enum: ['createdAt','price']
                -   name: sortBy
                    in: query
                    description: The sort order ('ASC' for ascending, 'DESC' for descending).
                    required: false
                    schema:
                        type: string
                        enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:   Get list properties successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get all properties!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                -   Invalid options provided!
                                                -   Both orderBy and sortBy must be provided together!
                                                -   Failed to get all properties!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
        delete:
            tags:
                - Admin - Manage Property
            summary: Delete list property by propertyId (UPDATED 12-03)
            description: Delete list property by propertyId
            operationId: deletePropertyBySeller
            parameters:
                -   name: propertyId
                    in: query
                    description: List Id of property, comma-separated
                    required: true
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: 69,70
            responses:
                '200':
                    description: Delete list properties successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete list properties successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to delete property!
                                                    -   Failed to delete list properties!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
              - bearerAuth: []
    /admin/manage-property/{propertyId}:
        get:
            tags:
            -   Admin - Manage Property
            summary: Get property by ADMIN (UPDATED 22/03)
            description: Returns a property by Id
            operationId: getPropertyById
            responses:
                '200':
                    description: Get property successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example:  Get property successfully!
                                    metaData:
                                        $ref: '#/components/schemas/PropertyJoinedAllTable'
                '400':
                    description: Failed to get property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get property!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
                - bearerAuth: []
    /admin/manage-property/disable:
        patch:
            tags:
            -   Admin - Manage Property
            summary: Disable list property by Id (UPDATED 12/03)
            description: Disable list property by Id
            operationId: updatePropertyStatusByAdmin
            parameters:
                -   name: propertyId
                    in: query
                    description: List Id of property, comma-separated
                    required: true
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: 69,70
            responses:
                '200':
                    description: List properties had been disabled successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: List properties had been disabled successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to disabled property!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   You can not update status of disabled property!
                                                    -   Failed to disabled property!
                                                    -   Failed to disabled list properties!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Property not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Property not found!
            security:
                - bearerAuth: []
    /admin/manage-transaction/deposit:
        get:
            tags:
                - Admin - Manage Transaction
            summary: Get list deposit transaction by admin (NEW)
            description: Get the list of deposit transactions by queries (default in 7 days before today and ordered by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllDepositTransactionsByAdmin
            parameters:
            -   name: userId
                in: query
                description: The ID of user who made the deposit
                required: false
                schema:
                    type: string
                    example: 2
            -   name: fromDateRange
                in: query
                description: The start date of the range to filter transactions. (default is 7 days before today)
                required: false
                schema:
                    type: string
                    format: date-time
            -   name: toDateRange
                in: query
                description: The end date of the range to filter transactions. (default is today)
                required: false
                schema:
                    type: string
                    format: date-time
            -   name: page
                in: query
                description: The page number for pagination.
                required: false
                schema:
                    type: number
            -   name: limit
                in: query
                description: The maximum number of items per page.
                required: false
                schema:
                    type: number
            -   name: orderBy
                in: query
                description: The field to order results by.
                required: false
                schema:
                    type: string
                    enum: ['createdAt']
            -   name: sortBy
                in: query
                description: The sort order ('ASC' for ascending, 'DESC' for descending).
                required: false
                schema:
                    type: string
                    enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get all deposit transactions successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all deposit transactions successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 5
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/DepositTransaction'
                '400':
                    description: Failed to get all deposit transactions!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get all deposit transactions!
                                                    -   Invalid date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -  Please Authenticate!
                                                    -  Unauthorized
                                                    -  Invalid accessToken!
                                                    - Please verify your email!
                                                    - Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found
            security:
                - bearerAuth: []
    /admin/manage-transaction/deposit/{userId}:
        post:
            tags:
                - Admin - Manage Transaction
            summary: Deposit credit to user by admin (UPDATED 26/03)
            description: Deposit credit to user by admin
            operationId: depositCreditToUserByAdmin
            parameters:
                -   name: userId
                    in: path
                    description: Id of user to deposit credit
                    required: true
                    schema:
                        type: number
                        example: 2
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            amountInDollars:
                                type: number
                                format: decimal(10,2)
                                example: 100.0
                            amountInCredits:
                                type: number
                                format: decimal(10,2)
                                example: 100.0
                            exchangeRate:
                                type: number
                                format: decimal(10,2)
                                example: 1.0
                        required:
                          - "amountInDollars"
                          - "amountInCredits"
                          - "exchangeRate"
            responses:
                '200':
                    description: Deposit credit to user successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: "Successfully added 100 Credit to the balance of user ID:2. The current balance is now 1120.00 Credit!"
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to deposit credit!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid deposit amount!
                                                    -   userId is required!
                                                    -   Failed to get user by userId!
                                                    -   Invalid description!
                                                    -   Failed to deposit credit!
                                                    -   Failed to update user balance!
                                                    -   Failed to get current exchange rate!
                                                    -   Failed to create deposit transaction!
                                                    -   Failed to update user balance!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Not found User, Conversion Rate, Exchange Rate!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                enum:
                                                    -   User not found!
                                                    -   Conversion rate not found!
                                                    -   Exchange rate not found!
            security:
                - bearerAuth: []
    /admin/manage-transaction/rent-service:
        get:
            tags:
                - Admin - Manage Transaction
            summary: Get list rent service transaction by admin (NEW)
            description: Get the list of rent service transactions by queries (default in 7 days before today and ordered by createdAt in descending order, limit 10 items per page, page 1)
            operationId: getAllRentServiceTransactionsByAdmin
            parameters:
            -   name: userId
                in: query
                description: The ID of user who made the deposit
                required: false
                schema:
                    type: string
                    example: 2
            -   name: fromDateRange
                in: query
                description: The start date of the range to filter transactions. (default is 7 days before today)
                required: false
                schema:
                    type: string
                    format: date-time
            -   name: toDateRange
                in: query
                description: The end date of the range to filter transactions. (default is today)
                required: false
                schema:
                    type: string
                    format: date-time
            -   name: page
                in: query
                description: The page number for pagination.
                required: false
                schema:
                    type: number
            -   name: limit
                in: query
                description: The maximum number of items per page.
                required: false
                schema:
                    type: number
            -   name: orderBy
                in: query
                description: The field to order results by.
                required: false
                schema:
                    type: string
                    enum: ['createdAt']
            -   name: sortBy
                in: query
                description: The sort order ('ASC' for ascending, 'DESC' for descending).
                required: false
                schema:
                    type: string
                    enum: ['ASC', 'asc', 'DESC', 'desc']
            responses:
                '200':
                    description: Get all rent service transactions successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all rent service transactions successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalPages:
                                                type: number
                                                example: 1
                                            currentPage:
                                                type: number
                                                example: 1
                                            totalItems:
                                                type: number
                                                example: 5
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/RentServiceTransaction'
                '400':
                    description: Failed to get all rent service transactions!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get all rent service transactions!
                                                    -   Invalid date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: User not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: User not found!
            security:
                - bearerAuth: []
    /admin/manage-category:
        get:
            tags:
                - Admin - Manage Category
            summary: Get all categories by ADMIN (NEW 07/03)
            description: Get all categories
            operationId: getAllCategoriesByAdmin
            responses:
                '200':
                    description: Get all categories successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get all categories successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                categoryId:
                                                    type: number
                                                    example: 1
                                                name:
                                                    type: string
                                                    example: Apartment
                '400':
                    description: Failed to get all categories!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all categories!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
        post:
            tags:
                - Admin - Manage Category
            summary: Create new category by ADMIN (NEW 07/03)
            description: Create new category
            operationId: createNewCategoryByAdmin
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            categoryName:
                                type: string
                                example: Villa
                        required:
                          - "categoryName"
            responses:
                '201':
                    description: Create new category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Create new category successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Category already exists!
                                                    -   categoryName is required!
                                                    -   Failed to create new category!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/manage-category/{categoryId}:
        patch:
            tags:
                - Admin - Manage Category
            summary: Update category by ADMIN (NEW 07/03)
            description: Update category by Id
            operationId: updateCategoryByAdmin
            parameters:
                -   name: categoryId
                    in: path
                    description: Id of category to update
                    required: true
                    schema:
                        type: number
                        example: 5
            requestBody:
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                            categoryName:
                                type: string
                                example: Apartment
                        required:
                          - "categoryName"
            responses:
                '200':
                    description: Update category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Update category successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Category already exists!
                                                    -   categoryName is required!
                                                    -   Failed to update category!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Category not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Category not found!
            security:
                - bearerAuth: []
        delete:
            tags:
                - Admin - Manage Category
            summary: Delete category by ADMIN (NEW 07/03)
            description: Delete a category by Id
            operationId: deleteCategoryByAdmin
            parameters:
                -   name: categoryId
                    in: path
                    description: Id of category to delete
                    required: true
                    schema:
                        type: number
                        example: 6
            responses:
                '200':
                    description: Delete category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete category successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to delete category!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Category not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Category not found!
            security:
                - bearerAuth: []
    /admin/manage-conversion-rate:
        get:
            tags:
                - Admin - Manage Conversion Rate
            summary: Get all conversion rates by ADMIN (NEW 12/03)
            description: Get all conversion rates by ADMIN
            operationId: getAllConversionRatesByAdmin
            responses:
                '200':
                    description: Get list conversion rates successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list conversion rates successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ConversionRate'
                '400':
                    description: Failed to get list conversion rates!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get list conversion rates!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
        post:
            tags:
                - Admin - Manage Conversion Rate
            summary: Create new conversion rate by ADMIN (NEW 12/03)
            description: Create new conversion rate by ADMIN
            operationId: createNewConversionRateByAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                currencyFrom:
                                    type: string
                                    enum:
                                        -   USD
                                currencyTo:
                                    type: string
                                    enum:
                                        -   Credit
                                exchangeRate:
                                    type: number
                                    format: decimal(10,2)
                                    example: 100
            responses:
                '201':
                    description: Create new conversion rate successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Create new conversion rate successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new conversion rate!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to create new conversion rate!
                                                    -   Currency from must be USD
                                                    -   Currency to must be Credit
                                                    -   exchangeRate must be greater than 0
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/manage-conversion-rate/{conversionRateId}:
        patch:
            tags:
                - Admin - Manage Conversion Rate
            summary: Update conversion rate by ADMIN (NEW 12/03)
            description: Update conversion rate by ADMIN
            operationId: updateConversionRateByAdmin
            parameters:
                -   name: conversionRateId
                    in: path
                    description: The currency from to update
                    required: true
                    schema:
                        type: number
                        enum:
                            -   1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                newExchangeRate:
                                    type: number
                                    format: decimal(10,2)
                                    example: 2
                            required:
                                - "newExchangeRate"
            responses:
                '200':
                    description: Update conversion rate successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Update conversion rate successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update conversion rate!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update conversion rate!
                                                    -   newExchangeRate must be greater than 0
                                                    -   New exchange rate must be different from the current exchange rate
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Conversion rate not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Conversion rate not found!
            security:
                - bearerAuth: []
        delete:
            tags:
                - Admin - Manage Conversion Rate
            summary: Delete conversion rate by ADMIN (NEW 12/03)
            description: Delete a conversion rate by Id
            operationId: deleteConversionRateByAdmin
            parameters:
                -   name: conversionRateId
                    in: path
                    description: Id of conversion rate to delete
                    required: true
                    schema:
                        type: number
                        example: 1
            responses:
                '200':
                    description: Delete conversion rate successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete conversion rate successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete conversion rate!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to delete conversion rate!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Conversion rate not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Conversion rate not found!
            security:
                - bearerAuth: []
    /admin/manage-service:
        get:
            tags:
                -   Admin - Manage Service
            summary: Get all services by ADMIN (NEW 12/03)
            description: Get all services by ADMIN
            operationId: getAllServicesByAdmin
            responses:
                '200':
                    description: Get list services successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get list services successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Service'
                '400':
                    description: Failed to get all services!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get all services!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
        post:
            tags:
                -   Admin - Manage Service
            summary: Create new service by ADMIN (NEW 12/03)
            description: Create new service by ADMIN
            operationId: createNewServiceByAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                serviceName:
                                    type: string
                                    uniqueItems: true
                                    example: 120-Day Rental Service
                                duration:
                                    type: number
                                    enum:
                                        - 15
                                        - 30
                                        - 60
                                        - 90
                                        - 120
                                price:
                                    type: number
                                    format: decimal(10,2)
                                    example: 50
            responses:
                '201':
                    description: Create new service successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 201
                                    message:
                                        type: string
                                        example: Create new service successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to create new service!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to create new service!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
        delete:
            tags:
                -   Admin - Manage Service
            summary: Delete list services by ADMIN (NEW 12/03)
            description: Delete list services by ADMIN
            operationId: deleteListServicesByAdmin
            parameters:
                -   name: serviceId
                    in: query
                    description: List serviceId, comma-separated
                    required: true
                    schema:
                        type: string
                        pattern: '^\d+(,\d+)*$'
                        example: 1,2
            responses:
                '200':
                    description: Delete list services successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Delete list services successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to delete list services!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to delete service!
                                                    -   Failed to delete list services!
                                                    -   Service ID is required!
                                                    -   Failed to get service by serviceId!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Unauthorized
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Service not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Service not found!
            security:
                - bearerAuth: []
    /admin/manage-service/{serviceId}:
        patch:
            tags:
                -  Admin - Manage Service
            summary: Update service by ADMIN (NEW 12/03)
            description: Update service by ADMIN
            operationId: updateServiceByAdmin
            parameters:
                -   name: serviceId
                    in: path
                    description: The service to update
                    required: true
                    schema:
                        type: number
                        example: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                serviceName:
                                    type: string
                                    uniqueItems: true
                                    example: 120-Day Rental Service
                                duration:
                                    type: number
                                    uniqueItems: true
                                    enum:
                                        - 15
                                        - 30
                                        - 60
                                        - 90
                                        - 120
                                price:
                                    type: number
                                    format: decimal(10,2)
                                    example: 100
            responses:
                '200':
                    description: Update service successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Update service successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update service!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to update service!
                                                    -   Service ID is required!
                                                    -   Failed to get service by serviceId!
                                                    -   New price must be different from the current price!
                                                    -   New service name must be different from the current service name!
                                                    -   New duration must be different from the current duration!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Service not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Service not found!
            security:
                - bearerAuth: []
    /admin/report/count-properties-by-feature:
        get:
            tags:
            -   Admin - Report
            summary: Count properties by feature (NEW 19/03)
            description: Return count properties by feature
            operationId: countPropertiesByFeature
            responses:
                '200':
                    description: Counting properties by feature successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties by feature successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertiesByFeature'
                                        example:
                                            -   featureId: 1
                                                name: Sale
                                                count: 6
                                            -   featureId: 2
                                                name: Rent
                                                count: 17
                '400':
                    description: Failed to count properties by feature!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to count properties by feature!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
              - bearerAuth: []
    /admin/report/count-properties-by-category:
        get:
            tags:
            -   Admin - Report
            summary: Count properties by category (NEW 19/03)
            description: Return count properties by category
            operationId: countPropertiesByCategory
            responses:
                '200':
                    description: Counting properties by category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties by category successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertiesByCategory'
                                        example:
                                            -   categoryId: 1
                                                name: Apartment
                                                count: 1
                                            -   categoryId: 2
                                                name: House
                                                count: 8
                                            -   categoryId: 3
                                                name: Villa
                                                count: 0
                                            -   categoryId: 4
                                                name: Serviced Apartment
                                                count: 0
                                            -   categoryId: 5
                                                name: Hotel
                                                count: 0
                '400':
                    description: Failed to get count properties by category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to count properties by category!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
              - bearerAuth: []
    /admin/report/count-properties-by-feature-category:
        get:
            tags:
            -   Admin - Report
            summary: Count properties by feature and category (NEW 04/4)
            description: Return count properties by feature and category
            operationId: countPropertiesByFeatureCategoryByAdmin
            responses:
                '200':
                    description: Counting properties by feature and category successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties by feature and category successfully!
                                    metaData:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CountPropertyByFeatureAndCategory'
                                        example:
                                            -   featureId: 1
                                                name: Sale
                                                totalCount: 7
                                                categories:
                                                    -   categoryId: 1
                                                        name: Apartment
                                                        count: 1
                                                    -   categoryId: 5
                                                        name: Hotel
                                                        count: 0
                                                    -   categoryId: 2
                                                        name: House
                                                        count: 6
                                                    -   categoryId: 4
                                                        name: Serviced Apartment
                                                        count: 0
                                                    -   categoryId: 3
                                                        name: Villa
                                                        count: 0
                                            -   featureId: 2
                                                name: Rent
                                                totalCount: 12
                                                categories:
                                                    -   categoryId: 1
                                                        name: Apartment
                                                        count: 0
                                                    -   categoryId: 5
                                                        name: Hotel
                                                        count: 0
                                                    -   categoryId: 2
                                                        name: House
                                                        count: 12
                                                    -   categoryId: 4
                                                        name: Serviced Apartment
                                                        count: 0
                                                    -   categoryId: 3
                                                        name: Villa
                                                        count: 0
                '400':
                    description: Failed to get all properties count by feature and category!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get all properties count by feature and category!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
              - bearerAuth: []
    /admin/report/count-properties-created-by-date:
        get:
            tags:
            -   Admin - Report
            summary: Count properties created by date (NEW 19/03)
            description: Return count properties created by date
            operationId: countPropertiesCreatedByDate
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count properties created by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-01-23
                -   name: toDateRange
                    in: query
                    description: The end date to count properties created by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-02-23
            responses:
                '200':
                    description: Counting properties created by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting properties created by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCount:
                                                type: number
                                                example: 20
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountPropertiesCreatedByDate'
                                                example:
                                                    -   dateReport: 2024-01-23
                                                        count: 20
                                                    -   dateReport: 2024-01-24
                                                        count: 0
                                                    -   dateReport: 2024-01-25
                                                        count: 0
                                                    -   dateReport: 2024-01-26
                                                        count: 0
                                                    -   dateReport: 2024-01-27
                                                        count: 0
                                                    -   dateReport: 2024-01-28
                                                        count: 0
                                                    -   dateReport: 2024-01-29
                                                        count: 0
                                                    -   dateReport: 2024-01-30
                                                        count: 0
                                                    -   dateReport: 2024-01-31
                                                        count: 0
                                                    -   dateReport: 2024-02-01
                                                        count: 0
                                                    -   dateReport: 2024-02-02
                                                        count: 0
                                                    -   dateReport: 2024-02-03
                                                        count: 0
                                                    -   dateReport: 2024-02-04
                                                        count: 0
                                                    -   dateReport: 2024-02-05
                                                        count: 0
                                                    -   dateReport: 2024-02-06
                                                        count: 0
                                                    -   dateReport: 2024-02-07
                                                        count: 0
                                                    -   dateReport: 2024-02-08
                                                        count: 0
                                                    -   dateReport: 2024-02-09
                                                        count: 0
                                                    -   dateReport: 2024-02-10
                                                        count: 0
                                                    -   dateReport: 2024-02-11
                                                        count: 0
                                                    -   dateReport: 2024-02-12
                                                        count: 0
                                                    -   dateReport: 2024-02-13
                                                        count: 0
                                                    -   dateReport: 2024-02-14
                                                        count: 0
                                                    -   dateReport: 2024-02-15
                                                        count: 0
                                                    -   dateReport: 2024-02-16
                                                        count: 0
                                                    -   dateReport: 2024-02-17
                                                        count: 0
                                                    -   dateReport: 2024-02-18
                                                        count: 0
                                                    -   dateReport: 2024-02-19
                                                        count: 0
                                                    -   dateReport: 2024-02-20
                                                        count: 0
                                                    -   dateReport: 2024-02-21
                                                        count: 0
                                                    -   dateReport: 2024-02-22
                                                        count: 0
                                                    -   dateReport: 2024-02-23
                                                        count: 0
                '400':
                    description: Failed to count properties created by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to count properties created by date!
                                                    -   Failed to get properties creation data by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/report/count-contacts-by-date:
        get:
            tags:
            -   Admin - Report
            summary: Count contacts by date (NEW 21/03)
            description: Return list count contacts by date
            operationId: countContactsByDate
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count contacts by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-01-23
                -   name: toDateRange
                    in: query
                    description: The end date to count contacts by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-02-23
            responses:
                '200':
                    description: Counting contacts by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Counting contacts by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCount:
                                                type: number
                                                example: 7
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountContactsByDate'
                                                example:
                                                    -   dateReport: 2024-01-23
                                                        count: 0
                                                    -   dateReport: 2024-01-24
                                                        count: 0
                                                    -   dateReport: 2024-01-25
                                                        count: 0
                                                    -   dateReport: 2024-01-26
                                                        count: 0
                                                    -   dateReport: 2024-01-27
                                                        count: 0
                                                    -   dateReport: 2024-01-28
                                                        count: 0
                                                    -   dateReport: 2024-01-29
                                                        count: 0
                                                    -   dateReport: 2024-01-30
                                                        count: 0
                                                    -   dateReport: 2024-01-31
                                                        count: 0
                                                    -   dateReport: 2024-02-01
                                                        count: 0
                                                    -   dateReport: 2024-02-02
                                                        count: 0
                                                    -   dateReport: 2024-02-03
                                                        count: 0
                                                    -   dateReport: 2024-02-04
                                                        count: 1
                                                    -   dateReport: 2024-02-05
                                                        count: 5
                                                    -   dateReport: 2024-02-06
                                                        count: 0
                                                    -   dateReport: 2024-02-07
                                                        count: 0
                                                    -   dateReport: 2024-02-08
                                                        count: 0
                                                    -   dateReport: 2024-02-09
                                                        count: 0
                                                    -   dateReport: 2024-02-10
                                                        count: 0
                                                    -   dateReport: 2024-02-11
                                                        count: 0
                                                    -   dateReport: 2024-02-12
                                                        count: 0
                                                    -   dateReport: 2024-02-13
                                                        count: 0
                                                    -   dateReport: 2024-02-14
                                                        count: 0
                                                    -   dateReport: 2024-02-15
                                                        count: 0
                                                    -   dateReport: 2024-02-16
                                                        count: 0
                                                    -   dateReport: 2024-02-17
                                                        count: 0
                                                    -   dateReport: 2024-02-18
                                                        count: 0
                                                    -   dateReport: 2024-02-19
                                                        count: 0
                                                    -   dateReport: 2024-02-20
                                                        count: 1
                                                    -   dateReport: 2024-02-21
                                                        count: 0
                                                    -   dateReport: 2024-02-22
                                                        count: 0
                                                    -   dateReport: 2024-02-23
                                                        count: 0
                '400':
                    description: Failed to count contacts by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to get contacts count by date range!
                                                    -   Failed to count contacts by date range!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/report/total-amount-deposited:
        get:
            tags:
            -   Admin - Report
            summary: Total amount deposited in dollars (NEW 27/03)
            description: Return total amount deposited by all sellers in dollars
            operationId: totalAmountDepositedInDollars
            responses:
                '200':
                    description: Get total amount deposited by all sellers successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total amount deposited by all sellers successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalAmount:
                                                type: number
                                                format: decimal(10,2)
                                                example: 1766.35
                '400':
                    description: Failed to get total amount deposited in dollars!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get total amount deposited in dollars!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/report/total-amount-deposited-by-date:
        get:
            tags:
            -   Admin - Report
            summary: Total amount deposited by date (NEW 27/03)
            description: Return total amount deposited by date
            operationId: getTotalAmountDepositedByDate
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count total amount deposited by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-23
                -   name: toDateRange
                    in: query
                    description: The end date to count total amount deposited by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-30
            responses:
                '200':
                    description: Get total amount deposited by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total amount deposited by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalAmountInDollars:
                                                type: number
                                                example: 916.35
                                            totalAmountInCredits:
                                                type: number
                                                example: 865
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountAmountDepositedByDate'
                                                example:
                                                    -   dateReport: 2024-03-21
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-22
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-23
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-24
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-25
                                                        amountInCredits: "600.00"
                                                        amountInDollars: "600.00"
                                                    -   dateReport: 2024-03-26
                                                        amountInCredits: "265.00"
                                                        amountInDollars: "316.35"
                                                    -   dateReport: 2024-03-27
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-28
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                                                    -   dateReport: 2024-03-29
                                                        amountInCredits: 0
                                                        amountInDollars: 0
                '400':
                    description: Failed to get total amount deposited by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to get total amount deposited by date range!
                                                    -   Failed to get total amount deposited by date!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/report/total-credits-used-by-date:
        get:
            tags:
            -   Admin - Report
            summary: Total credits used by date (NEW 27/03)
            description: Return total credits used by date
            operationId: getTotalCreditsUsedByDate
            parameters:
                -   name: fromDateRange
                    in: query
                    description: The start date to count total credits used by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-01
                -   name: toDateRange
                    in: query
                    description: The end date to count total credits used by date
                    required: true
                    schema:
                        type: string
                        format: date
                        example: 2024-03-30
            responses:
                '200':
                    description: Get total credits used by date successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total credits used by date successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            totalCreditsUsed:
                                                type: number
                                                example: 865
                                            data:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/CountCreditsUsedByDate'
                                                example:
                                                    -   dateReport: 2024-03-01
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-02
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-03
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-04
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-05
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-06
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-07
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-08
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-09
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-10
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-11
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-12
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-13
                                                        totalCreditsUsed: 200.00
                                                    -   dateReport: 2024-03-14
                                                        totalCreditsUsed: 890.00
                                                    -   dateReport: 2024-03-15
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-16
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-17
                                                        totalCreditsUsed: 15.00
                                                    -   dateReport: 2024-03-18
                                                        totalCreditsUsed: 30.00
                                                    -   dateReport: 2024-03-19
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-20
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-21
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-22
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-23
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-24
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-25
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-26
                                                        totalCreditsUsed: 15.00
                                                    -   dateReport: 2024-03-27
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-28
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-29
                                                        totalCreditsUsed: 0
                                                    -   dateReport: 2024-03-30
                                                        totalCreditsUsed: 0

                '400':
                    description: Failed to get total amount deposited by date!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Invalid date range!
                                                    -   Failed to get total amount deposited by date range!
                                                    -   Failed to get total amount deposited by date!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/report/total-accounts-by-role:
        get:
            tags:
            -   Admin - Report
            summary: Get total accounts by role (NEW 28/03)
            description: Return total accounts by role
            operationId: getTotalAccountsByRole
            responses:
                '200':
                    description: Get total accounts by role successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get total accounts by role successfully!
                                    metaData:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                roleId:
                                                    type: number
                                                    example: 1
                                                roleName:
                                                    type: string
                                                    example: User
                                                totalAccounts:
                                                    type: number
                                                    example: 5
                                        example:
                                            -   roleId: 1
                                                roleName: User
                                                totalAccounts: 5
                                            -   roleId: 2
                                                roleName: Seller
                                                totalAccounts: 5
                '400':
                    description: Failed to get total accounts by role!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                enum:
                                                    -   Failed to get total accounts by role!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []
    /admin/manage-maintenance-mode:
        get:
            tags:
                - Admin - Manage Maintenance Mode
            summary: Get maintenance mode by ADMIN (NEW 25/03)
            description: Get maintenance mode by ADMIN
            operationId: getMaintenanceModeByAdmin
            responses:
                '200':
                    description: Get maintenance mode successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Get maintenance mode successfully!
                                    metaData:
                                        type: object
                                        properties:
                                            isMaintenance:
                                                type: boolean
                                                example: false
                                            description:
                                                type: string
                                                example: Maintenance mode is off!
                '400':
                    description: Failed to get maintenance mode!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to get maintenance mode!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
                '404':
                    description: Maintenance mode not found!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 404
                                            message:
                                                type: string
                                                example: Maintenance mode not found!
            security:
                - bearerAuth: []
        patch:
            tags:
                - Admin - Manage Maintenance Mode
            summary: Update maintenance mode by ADMIN (NEW 25/03)
            description: Update maintenance mode by ADMIN
            operationId: updateMaintenanceModeByAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                isMaintenance:
                                    type: boolean
                                    example: true
                                description:
                                    type: string
                                    example: Maintenance mode is on!
                            required:
                                - isMaintenance
                                - description with isMaintenance is true
            responses:
                '200':
                    description: Maintenance mode has been enabled successfully!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: number
                                        example: 200
                                    message:
                                        type: string
                                        example: Maintenance mode has been enabled successfully!
                                    metaData:
                                        type: object
                                        example: {}
                '400':
                    description: Failed to update maintenance mode!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 400
                                            message:
                                                type: string
                                                example: Failed to update maintenance mode!
                '401':
                    description: Unauthorized!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 401
                                            message:
                                                type: string
                                                enum:
                                                    -   Please Authenticate!
                                                    -   Invalid accessToken!
                                                    -   Please verify your email!
                                                    -   Permission denied!
                '403':
                    description: Your account is not active!
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            status:
                                                type: number
                                                example: 403
                                            message:
                                                type: string
                                                example: Your account is not active!
            security:
                - bearerAuth: []

components:
    schemas:
        Property:
            type: object
            properties:
                remainingTime:
                        type: number
                        format: bigint
                        example: 1295244036
                        description: Remaining time to expire the property in milliseconds
                propertyId:
                    type: number
                    example: 17
                userId:
                    type: number
                    example: 5
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                featureId:
                    type: number
                    example: 1
                categoryId:
                    type: number
                    example: 2
                locationId:
                    type: number
                    example: 2
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: boolean
                    example: true
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                expiresAt:
                    type: string
                    format: date-time
                    example: 2024-01-24T05:52:44.000Z
                savedRemainingRentalTime:
                    type: number
                    format: bigint
                    default: 0
                    description: Saved remaining rental time in milliseconds
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
        PropertyJoinedAllTable:
            type: object
            properties:
                remainingTime:
                    type: number
                    format: bigint
                    example: 1295244036
                    description: Remaining time to expire the property in milliseconds
                propertyId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: string
                    enum:
                        - Available
                        - Unavailable
                        - Disabled
                    example: Available
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                expiresAt:
                    type: string
                    format: date-time
                    example: 2024-01-24T05:52:44.000Z
                savedRemainingRentalTime:
                    type: number
                    format: bigint
                    default: 0
                    description: Saved remaining rental time in milliseconds
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                feature:
                    type: object
                    properties:
                        featureId:
                            type: number
                            example: 1
                        name:
                            type: string
                            example: Sale
                category:
                    type: object
                    properties:
                        categoryId:
                            type: number
                            example: 2
                        name:
                            type: string
                            example: House
                location:
                    type: object
                    properties:
                        locationId:
                            type: number
                            example: 2
                        wardCode:
                            type: string
                            example: 20275
                        districtCode:
                            type: string
                            example: 494
                        provinceCode:
                            type: string
                            example: 48
                        street:
                            type: string
                            example: Vo Nguyen Giap
                        address:
                            type: string
                            example: 100 Vo Nguyen Giap
                        lat:
                            type: string
                            example: 16.047079
                        lng:
                            type: string
                            example: 108.220736
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            imageId:
                                type: number
                                example: 10
                            imageUrl:
                                type: string
                                example: https://toanhuyhoang.com/wp-content/uploads/2023/09/z4961049532378_ad7a21ff4f9720289b0e09ce80cb0e2b.jpg
                seller:
                    type: object
                    properties:
                        userId:
                            type: number
                            example: 5
                        fullName:
                            type: string
                            example: Le Nhat Trinh
                        email:
                            type: string
                            example: lenhattrinh@gmail.com
                        phone:
                            type: string
                            example: 0899619250
                        avatar:
                            type: string
                            example: null,
                fullLocationText:
                    type: string
                    example: 207 Xuan Dieu, Xuan Dieu, Thuan Phuoc, Hai Chau, Da Nang
        Province:
            type: object
            properties:
                provinceCode:
                    type: string
                    example: 01
                nameEn:
                    type: string
                    example: Ha Noi
                fullNameEn:
                    type: string
                    example: Ha Noi City
                codeName:
                    type: string
                    example: ha_noi
        District:
            type: object
            properties:
                districtCode:
                    type: string
                    example: 490
                nameEn:
                    type: string
                    example: Lien Chieu
                fullNameEn:
                    type: string
                    example: Lien Chieu District
                codeName:
                    type: string
                    example: lien_chieu
                provinceCode:
                    type: string
                    example: 48
        Ward:
            type: object
            properties:
                wardCode:
                    type: string
                    example: 20194
                nameEn:
                    type: string
                    example: Hoa Hiep Bac
                fullNameEn:
                    type: string
                    example: Hoa Hiep Bac Ward
                codeName:
                    type: string
                    example: hoa_hiep_bac
                districtCode:
                    type: string
            example: 490
        User:
            type: object
            properties:
                userId:
                    type: number
                    example: 15
                roleId:
                    type: number
                    example: 1
                fullName:
                    type: string
                    example: Le Nhat Trinh
                email:
                    type: string
                    example: tldevuser@gmail.com
                phone:
                    type: string
                    example: 0899619252
                avatar:
                    type: string
                    example: null
                wardCode:
                    type: string
                    example: 20236
                districtCode:
                    type: string
                    example: 492
                provinceCode:
                    type: string
                    example: 48
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
        Tokens:
            type: object
            properties:
                accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE1LCJpYXQiOjE3MDcyOTE4MzYsImV4cCI6MTcwNzI5NTQzNiwidHlwZSI6ImFjY2VzcyJ9.T8u9lbLeeBXD4peVgar6YX6ZTWvMOeIjOAF_nXcIu9s
                refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE1LCJpYXQiOjE3MDcyOTE4MzYsImV4cCI6MTcwNzg5NjYzNiwidHlwZSI6InJlZnJlc2gifQ.iHT53WUnZjRbjfhc9Qrb-BUYpWCabsKmZMeRiA7wpQQ
        Seller:
            type: object
            properties:
                userId:
                    type: number
                    example: 21
                email:
                    type: string
                    example: tldevseller@gmail.com
                fullName:
                    type: string
                    example: Test Seller
                phone:
                    type: string
                    example: "0888888776"
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 492
                wardCode:
                    type: string
                    example: 20236
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
                roleId:
                    type: number
                    example: 2,
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false,
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-07T08:08:44.032Z
        NewSeller:
            type: object
            properties:
                email:
                    type: string
                    example: tldevseller@gmail.com
                password:
                    type: string
                    example: T12345678
                fullName:
                    type: string
                    example: Test Seller
                phone:
                    type: string
                    example: "0888888776"
                provinceCode:
                    type: string
                    example: "48"
                districtCode:
                    type: string
                    example: "492"
                wardCode:
                    type: string
                    example: "20236"
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: "107"
            required:
              - "email"
              - "password"
              - "fullName"
              - "phone"
              - "provinceCode"
              - "districtCode"
              - "wardCode"
              - "street"
        UserBody:
            type: object
            properties:
                email:
                    type: string
                    example: tldevuser@gmail.com
                password:
                    type: string
                    example: T12345678
            required:
              - "email"
              - "password"
        UserProfile:
            type: object
            properties:
                userId:
                    type: number
                    example: 2
                fullName:
                    type: string
                    example: "Le Nhat Trinh"
                email:
                    type: string
                    example: "mail.tldev@gmail.com"
                phone:
                    type: string
                    example: "0899619252"
                avatar:
                    type: string
                    example: null
                street:
                    type: string
                    example: "Bach Dang"
                address:
                    type: string
                    example: "107"
                balance:
                    type: number
                    format: decimal(10,2)
                    example: 500.00
                isActive:
                    type: boolean
                    example: true
                isEmailVerified:
                    type: boolean
                    example: false
                createdAt:
                    type: string
                    format: date-time
                    example: "2024-01-31T08:00:12.000Z"
                updatedAt:
                    type: string
                    format: date-time
                    example: "2024-02-09T05:10:01.000Z"
                role:
                    type: object
                    properties:
                        roleId:
                            type: number
                            example: 2
                        roleName:
                            type: string
                            example: "Seller"
                ward:
                    type: object
                    properties:
                        wardCode:
                            type: string
                            example: "20236"
                        fullNameEn:
                            type: string
                            example: "Hai Chau I Ward"
                province:
                    type: object
                    properties:
                        provinceCode:
                            type: string
                            example: "48"
                        fullNameEn:
                            type: string
                            example: "Da Nang City"
                district:
                    type: object
                    properties:
                        districtCode:
                            type: string
                            example: "492"
                        fullNameEn:
                            type: string
                            example: "Hai Chau District"
        PropertyOfSeller:
            type: object
            properties:
                remainingTime:
                    type: number
                    format: bigint
                    example: 1295244036
                    description: Remaining time to expire the property in milliseconds
                propertyId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Apartment for sale at Alphanam Luxury Apartment Danang
                price:
                    type: number
                    format: decimal(10,2)
                    example: 230000.0
                currencyCode:
                    type: string
                    example: USD
                status:
                    type: string
                    enum:
                        - Available
                        - Unavailable
                        - Disabled
                    example: Available
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                numberOfBedRoom:
                    type: number
                    example: 2
                numberOfToilet:
                    type: number
                    example: 2
                numberOfFloor:
                    type: number
                    example: 25
                direction:
                    type: string
                    example: West
                description:
                    type: string
                expiresAt:
                    type: string
                    format: date-time
                    example: 2024-01-24T05:52:44.000Z
                savedRemainingRentalTime:
                    type: number
                    format: bigint
                    default: 0
                    description: Saved remaining rental time in milliseconds
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-01-23T05:52:44.000Z
                feature:
                    type: object
                    properties:
                        featureId:
                            type: number
                            example: 1
                        name:
                            type: string
                            example: Sale
                category:
                    type: object
                    properties:
                        categoryId:
                            type: number
                            example: 2
                        name:
                            type: string
                            example: House
                location:
                    type: object
                    properties:
                        locationId:
                            type: number
                            example: 2
                        wardCode:
                            type: string
                            example: 20275
                        districtCode:
                            type: string
                            example: 494
                        provinceCode:
                            type: string
                            example: 48
                        street:
                            type: string
                            example: Vo Nguyen Giap
                        address:
                            type: string
                            example: 100 Vo Nguyen Giap
                        lat:
                            type: string
                            example: 16.047079
                        lng:
                            type: string
                            example: 108.220736
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            imageId:
                                type: number
                                example: 10
                            imageUrl:
                                type: string
                                example: https://toanhuyhoang.com/wp-content/uploads/2023/09/z4961049532378_ad7a21ff4f9720289b0e09ce80cb0e2b.jpg
                fullLocationText:
                    type: string
                    example: 207 Xuan Dieu, Xuan Dieu, Thuan Phuoc, Hai Chau, Da Nang
        NewPropertyBody:
            properties:
                name:
                    type: string
                    example: "Boutique Hotel For Sale - 7 Suite Room in Son Tra District, Beach Area"
                featureId:
                    type: number
                    enum:
                      - 1
                      - 2
                    example: 1
                categoryId:
                    type: number
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                    example: 2
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 493
                wardCode:
                    type: string
                    example: 20272
                street:
                    type: string
                    example: Ho Nghinh
                address:
                    type: string
                    example: Ho Nghinh
                price:
                    type: number
                    example: 430000
                currencyCode:
                    type: string
                    example: USD
                landArea:
                    type: string
                    example: 92.5
                areaOfUse:
                    type: string
                    example: 92.5
                numberOfBedRoom:
                    type: number
                    example: 7
                    description: Number of bedrooms in the Boutique Hotel
                numberOfToilet:
                    type: number
                    example: 8
                numberOfFloor:
                    type: number
                    example: 5
                direction:
                    type: string
                    example: West
                description:
                    type: string
                    example: Boutique Hotel For Sale Bedroom House for sale in An Hai Bac, Da Nang
                images:
                    type: array
                    example: ["link1", "link2"]
                    items:
                        type: string
                        description: Link to images of the Boutique Hotel
            required:
                - "amount"
                - "name"
                - "featureId"
                - "categoryId"
                - "provinceCode"
                - "districtCode"
                - "wardCode"
                - "street"
                - "price"
                - "currencyCode"
                - "areaOfUse"
                - "numberOfBedRoom"
                - "numberOfToilet"
                - "numberOfFloor"
                - "images"
        UpdatePropertyBody:
            type: object
            properties:
                name:
                    type: string
                    example: "Boutique Hotel For Sale - 7 Suite Room in Son Tra District, Beach Area"
                landArea:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                areaOfUse:
                    type: number
                    format: decimal(10,2)
                    example: 92.5
                price:
                    type: number
                    format: decimal(10,2)
                    example: 460000.0
                direction:
                    type: string
                    example: West
                description:
                    type: string
                    example: New description
        NewContactBody:
            type: object
            properties:
                propertyId:
                    type: number
                    example: 4
                sellerId:
                    type: number
                    example: 2
                name:
                    type: string
                    example: Le Khach Hang
                email:
                    type: string
                    example: avs73ltqb@gmail.com
                phone:
                    type: string
                    example: 0899619250
                message:
                    type: string
                    example: I want to rent your property!
            required:
                -   "propertyId"
                -   "sellerId"
                -   "name"
                -   "email"
                -   "phone"
                -   "message"
        UpdateUserProfile:
            type: object
            properties:
                fullName:
                    type: string
                    example: "Le Nhat Trinh"
                phone:
                    type: string
                    example: "0899619252"
                provinceCode:
                    type: string
                    example: "48"
                districtCode:
                    type: string
                    example: "492"
                wardCode:
                    type: string
                    example: "20236"
                street:
                    type: string
                    example: "Bach Dang"
                address:
                    type: string
                    example: "107"
        DepositTransaction:
            type: object
            properties:
                transactionId:
                    type: number
                    example: 1
                userId:
                    type: number
                    example: 2
                amountInDollars:
                    type: number
                    format: decimal(10,2)
                    example: 100.0
                amountInCredits:
                    type: number
                    format: decimal(10,2)
                    example: 200.0
                exchangeRate:
                    type: number
                    format: decimal(10,2)
                    example: 2.0
                balanceInCredits:
                    type: number
                    format: decimal(10,2)
                    example: 200.0
                description:
                    type: string
                    example: Deposit $100 equivalent to 200 Credits
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-03-25T09:34:25.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-03-25T09:34:25.000Z
        RentServiceTransaction:
            type: object
            properties:
                transactionId:
                    type: number
                    example: 1
                userId:
                    type: number
                    example: 2
                amountInCredits:
                    type: number
                    format: decimal(10,2)
                    example: 20.0
                balanceInCredits:
                    type: number
                    format: decimal(10,2)
                    example: 0
                description:
                    type: string
                    example: "Create new property!. ID: 27"
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-02-21T04:32:26.000Z
        UpdateUserBodyByAdmin:
            type: object
            properties:
                roleId:
                    type: number
                    enum:
                        - 1
                        - 2
                        - 3
                fullName:
                    type: string
                    example: Le Nhat Trinh
                phone:
                    type: string
                    example: 0899619252
                isEmailVerified:
                    type: boolean
                    example: true
                avatar:
                    type: string
                    example: 'link'
                provinceCode:
                    type: string
                    example: 48
                districtCode:
                    type: string
                    example: 492
                wardCode:
                    type: string
                    example: 20236
                street:
                    type: string
                    example: Bach Dang
                address:
                    type: string
                    example: 107
        Service:
            type: object
            properties:
                serviceId:
                    type: number
                    example: 1
                serviceName:
                    type: string
                    uniqueItems: true
                    example: 15-Day Rental Service
                duration:
                    type: number
                    uniqueItems: true
                    example: 15
                price:
                    type: number
                    format: decimal(10,2)
                    example: "15.00"
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-03-04T15:09:35.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-03-04T15:09:35.000Z
        ConversionRate:
            type: object
            properties:
                conversionRateId:
                    type: number
                    example: 1
                currencyFrom:
                    type: string
                    example: USD
                currencyTo:
                    type: string
                    example: Credit
                exchangeRate:
                    type: number
                    format: decimal(10,2)
                    example: 1.00
                createdAt:
                    type: string
                    format: date-time
                    example: 2024-03-04T08:52:53.000Z
                updatedAt:
                    type: string
                    format: date-time
                    example: 2024-03-04T08:52:53.000Z
        CountPropertiesByFeature:
            type: object
            properties:
                featureId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Sale
                count:
                    type: number
                    example: 5
                    default: 0
        CountPropertiesByCategory:
            type: object
            properties:
                categoryId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Apartment
                count:
                    type: number
                    example: 5
                    default: 0
        CountPropertiesCreatedByDate:
            type: object
            properties:
                dateReport:
                    type: string
                    format: date
                    example: 2024-03-04
                count:
                    type: number
                    example: 5
                    default: 0
        Category:
            type: object
            properties:
                        categoryId:
                            type: number
                            example: 1
                        name:
                            type: string
                            example: Apartment
                        count:
                            type: number
                            example: 1
                            default: 0
        CountPropertyByFeatureAndCategory:
            type: object
            properties:
                featureId:
                    type: number
                    example: 1
                name:
                    type: string
                    example: Sale
                totalCount:
                    type: number
                    example: 7
                categories:
                    type: array
                    items:
                        $ref: '#/components/schemas/Category'
            example:
                featureId: 1
                name: Sale
                totalCount: 7
                categories:
                    -   categoryId: 1
                        name: Apartment
                        count: 1
                    -   categoryId: 5
                        name: Hotel
                        count: 0
                    -   categoryId: 2
                        name: House
                        count: 6
                    -   categoryId: 4
                        name: Serviced Apartment
                        count: 0
                    -   categoryId: 3
                        name: Villa
                        count: 0
        CountContactsByDate:
            type: object
            properties:
                dateReport:
                    type: string
                    format: date
                    example: 2024-01-23
                count:
                    type: number
                    example: 1
                    default: 0
        CountAmountDepositedByDate:
            type: object
            properties:
                dateReport:
                    type: string
                    format: date
                    example: 2024-03-25
                amountInCredits:
                    type: number
                    example: 215.00
                    default: 0
                amountInDollars:
                    type: number
                    example: 266.35
                    default: 0
        CountCreditsUsedByDate:
            type: object
            properties:
                dateReport:
                    type: string
                    format: date
                    example: 2024-03-25
                amountInCredits:
                    type: number
                    example: 215.00
                    default: 0
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
